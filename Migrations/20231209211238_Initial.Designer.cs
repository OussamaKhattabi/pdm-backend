// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pdm.Data;

#nullable disable

namespace pdm.Migrations
{
    [DbContext(typeof(PDMContext))]
    [Migration("20231209211238_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.23");

            modelBuilder.Entity("pdm.Models.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehiculeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehiculeId");

                    b.ToTable("Commande");
                });

            modelBuilder.Entity("pdm.Models.Custom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Couleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PrixCustom")
                        .HasColumnType("REAL");

                    b.Property<int>("Stage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehiculeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehiculeId");

                    b.ToTable("Custom");
                });

            modelBuilder.Entity("pdm.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehiculeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VehiculeId")
                        .IsUnique();

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("pdm.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("pdm.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("pdm.Models.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Prix")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Vehicule");
                });

            modelBuilder.Entity("pdm.Models.Commande", b =>
                {
                    b.HasOne("pdm.Models.Custom", "Custom")
                        .WithMany("Commandes")
                        .HasForeignKey("CustomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pdm.Models.User", "User")
                        .WithMany("Commandes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pdm.Models.Vehicule", "Vehicule")
                        .WithMany("Commandes")
                        .HasForeignKey("VehiculeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Custom");

                    b.Navigation("User");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("pdm.Models.Custom", b =>
                {
                    b.HasOne("pdm.Models.Vehicule", "Vehicule")
                        .WithMany("Customs")
                        .HasForeignKey("VehiculeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("pdm.Models.Reservation", b =>
                {
                    b.HasOne("pdm.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pdm.Models.Vehicule", "Vehicule")
                        .WithOne("Reservation")
                        .HasForeignKey("pdm.Models.Reservation", "VehiculeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("pdm.Models.User", b =>
                {
                    b.HasOne("pdm.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("pdm.Models.Custom", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("pdm.Models.User", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("pdm.Models.Vehicule", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Customs");

                    b.Navigation("Reservation");
                });
#pragma warning restore 612, 618
        }
    }
}
